"""–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å—Å—ã–ª–æ–∫ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª–∏ –ø—Ä–æ–¥–∞–≤—Ü–æ–≤ –∏–∑ summary.json."""
from __future__ import annotations

import json
from pathlib import Path

import config


def generate_seller_urls(summary_path: Path, output_path: Path) -> None:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª–∏ –ø—Ä–æ–¥–∞–≤—Ü–æ–≤ –∏–∑ summary.json.
    
    Args:
        summary_path: –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É summary.json
        output_path: –ü—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ URL'–æ–≤
    """
    # –ß–∏—Ç–∞–µ–º summary.json
    try:
        data = json.loads(summary_path.read_text("utf-8"))
    except (json.JSONDecodeError, UnicodeDecodeError, FileNotFoundError) as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ {summary_path}: {e}")
        return
    
    sellers = data.get("sellers", [])
    if not sellers:
        print("–ü—Ä–æ–¥–∞–≤—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ summary.json")
        return
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º URL'—ã
    urls = []
    for seller in sellers:
        seller_id = seller.get("seller_id")
        if seller_id:
            url = f"https://www.avito.ru/brands/{seller_id}"
            urls.append(url)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
    output_path.write_text("\n".join(urls) + "\n", "utf-8")
    
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ {len(urls)} —Å—Å—ã–ª–æ–∫ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª–∏ –ø—Ä–æ–¥–∞–≤—Ü–æ–≤")
    print(f"üìÅ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤: {output_path}")
    print(f"\n–ü—Ä–∏–º–µ—Ä—ã –ø–µ—Ä–≤—ã—Ö 5 URL'–æ–≤:")
    for url in urls[:5]:
        print(f"  - {url}")


def main() -> None:
    """–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞."""
    summary_path = config.RESULTS_DIR / "summary.json"
    output_path = config.RESULTS_DIR / "seller_urls.txt"
    
    if not summary_path.exists():
        print(f"‚ùå –§–∞–π–ª {summary_path} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("–°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ aggregate_results.py")
        return
    
    generate_seller_urls(summary_path, output_path)


if __name__ == "__main__":
    main()


